# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: UsePythonVersion@0
  displayName: "Setting Python version to 3.8 as required by functions"
  inputs:
    versionSpec: '3.8'
    architecture: 'x64'
- bash: |
    if [ -f extensions.csproj ]
    then
        dotnet build extensions.csproj --output ./bin
    fi
    pip install --target="./.python_packages/lib/site-packages" -r ./src/requirements.txt
- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/src"
    includeRootFolder: false
    archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    artifactName: 'drop'
- task: AzureAppServiceSettings@1
  displayName: Update App Settings
  inputs:
    azureSubscription: $(serviceConnection)
    appName: $(appName)
    resourceGroupName: $(resourceGroup)
    appSettings: |
      [
        {
          "name": "ENABLE_ORYX_BUILD",
          "value": "$(ENABLE_ORYX_BUILD)",
          "slotSetting": false
        },
        {
          "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
          "value": "$(SCM_DO_BUILD_DURING_DEPLOYMENT)", 
          "slotSetting": false
        },
        {
          "name": "WEBSITE_RUN_FROM_PACKAGE",
          "value": "$(WEBSITE_RUN_FROM_PACKAGE)", 
          "slotSetting": false
        },
        {
          "name": "deploySubpath",
          "value": "$(deploySubpath)",
          "slotSetting": false
        },
        {
          "name": "DESTINATION_VAULT_NAME",
          "value": "$(DESTINATION_VAULT_NAME)",
          "slotSetting": false
        },
        {
          "name": "TABLE_STORAGE_MAPPING",
          "value": "$(TABLE_STORAGE_MAPPING)",
          "slotSetting": false
        },
        {
          "name": "SOURCE_VAULT_MOUNT",
          "value": "$(SOURCE_VAULT_MOUNT)",
          "slotSetting": false
        },
        {
          "name": "SOURCE_VAULT_ROLE",
          "value": "$(SOURCE_VAULT_ROLE)",
          "slotSetting": false
        },
        {
          "name": "SOURCE_VAULT_URL",
          "value": "$(SOURCE_VAULT_URL)",
          "slotSetting": false
        }
      ]
- task: AzureFunctionApp@1
  inputs:
    azureSubscription: $(serviceConnection)
    appType: functionAppLinux
    appName: $(appName)
    package: $(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip
    deploymentMethod: zipDeploy

